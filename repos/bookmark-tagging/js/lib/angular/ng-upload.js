angular.module("ngUpload",[]).directive("uploadSubmit",["$parse",function(e){return{restrict:"AC",link:function(t,n,r){var i={};i.enableControls=r.uploadOptionsEnableControls,r.hasOwnProperty("uploadOptionsConvertHidden")&&(i.convertHidden=r.uploadOptionsConvertHidden!="false");var s=angular.element(n).parents("form"),o=e(r.uploadSubmit);if(!angular.isFunction(o)){var u="The expression on the ngUpload directive does not point to a valid function.";throw u+"\n"}n.bind("click",function(e){e&&(e.preventDefault=!0);if(n.attr("disabled"))return;var r=angular.element("<iframe id='upload_iframe' name='upload_iframe' border='0' width='0' height='0' style='width: 0px; height: 0px; border: none; display: none' />");s.parent().append(r),r.bind("load",function(){var e=r[0],i=e.contentDocument||e.contentWindow.document,s=i.body.innerText||i.body.textContent;try{s=$.parseJSON(s)}catch(u){console&&console.log("WARN: XHR response is not valid json")}t.$$phase?o(t,{content:s,completed:!0}):t.$apply(function(){o(t,{content:s,completed:!0})}),s!==""&&setTimeout(function(){r.remove()},250),n.attr("disabled",null),n.attr("title","Click to start upload.")}),t.$$phase?o(t,{content:"Please wait...",completed:!1}):t.$apply(function(){o(t,{content:"Please wait...",completed:!1})});var u=!0;i.enableControls||(n.attr("disabled","disabled"),u=!1),n.attr("title",(u?"[ENABLED]: ":"[DISABLED]: ")+"Uploading, please wait..."),i.convertHidden&&s.find(":hidden[ng-model]").each(function(){$(this).attr("value",t.$eval($(this).attr("ng-model")))}),s.submit()}).attr("title","Click to start upload.")}}}]).directive("ngUpload",["$parse",function(e){return{restrict:"AC",link:function(e,t,n){var r={};n.hasOwnProperty("uploadOptionsEnableRailsCsrf")&&(r.enableRailsCsrf=n.uploadOptionsEnableRailsCsrf!="false"),t.attr("target","upload_iframe"),t.attr("method","post");var i=t.attr("action").indexOf("?")==-1?"?":"&";t.attr("action",t.attr("action")+i+"_t="+(new Date).getTime()),t.attr("enctype","multipart/form-data"),t.attr("encoding","multipart/form-data"),r.enableRailsCsrf&&$("<input />").attr("id","upload-csrf-token").attr("type","hidden").attr("name",$("meta[name=csrf-param]").attr("content")).val($("meta[name=csrf-token]").attr("content")).appendTo(t)}}}]);